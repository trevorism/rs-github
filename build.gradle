buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url uri("https://trevorism-build.eastus.cloudapp.azure.com/nexus/repository/maven-releases")
        }
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.1.0'
        classpath 'com.trevorism:gradle-acceptance-plugin:2.1.0'
        classpath 'com.trevorism:gradle-gae-deploy-plugin:1.3.0'
        classpath 'com.trevorism:gradle-release-plugin:0.5.0'
    }
}

plugins {
    id "groovy"
    id "war"
    id "jacoco"
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: "com.trevorism.gradle.acceptance"
apply plugin: "com.trevorism.gradle.gae.deploy"
apply plugin: "com.trevorism.gradle.release"

repositories {
    mavenCentral()
    maven {
        url uri("https://trevorism-build.eastus.cloudapp.azure.com/nexus/repository/maven-releases")
    }
}

def jerseyVersion = "2.32"

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.5.8'

    implementation "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    implementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.11.3'

    implementation 'org.slf4j:slf4j-nop:1.7.30'
    implementation 'io.swagger:swagger-jersey2-jaxrs:1.6.2'

    implementation 'com.trevorism:secure-utils:3.3.1'

    acceptanceImplementation 'io.cucumber:cucumber-groovy:4.7.1'
    acceptanceImplementation 'com.trevorism:http-utils:1.1.0'

    testImplementation 'junit:junit:4.13'
}


appengine {
    deploy {
        projectId = "trevorism-pushbutton"
        stopPreviousVersion = true
        promote = true
        version = "0-0-1"
    }
}

check {
    dependsOn('jacocoTestReport')
}

task deliver {
    dependsOn("build","appengineDeploy")
    appengineDeploy.mustRunAfter("check")
}

node {
    version = '12.11.1'
    npmVersion = '6.12.0'
    download = true
    nodeModulesDir = file("${project.projectDir}/src/app")
}

task installApp(type: NpmTask){
    args = ['install']
}

task buildApp(type: NpmTask) {
    dependsOn("installApp")
    args = ['run', 'build']
}

task testApp(type: NpmTask) {
    args = ['test']
}

task runApp(type: NpmTask) {
    args = ['run','dev']
}

war{
    from "${buildDir}/dist"
}

war.dependsOn("buildApp")
check.dependsOn("testApp")